# Reminder: If this workflow's name changes, update the name in the dependent workflow at .github/workflows/failureNotifier.yml.
name: Process new code merged to master

on:
  push:
    branches: [master]
    paths-ignore: [docs/**, contributingGuides/**, jest/**, tests/**]

jobs:
  typecheck:
    uses: ./.github/workflows/typecheck.yml

  lint:
    uses: ./.github/workflows/lint.yml

  test:
    uses: ./.github/workflows/test.yml

  confirmPassingBuild:
    runs-on: ubuntu-latest
    needs: [typecheck, lint, test]
    if: ${{ always() }}

    steps:
      - uses: actions/checkout@v4


      - name: Announce failed workflow in Discord
        if: ${{ needs.typecheck.result == 'failure' || needs.lint.result == 'failure' || needs.test.result == 'failure' }}
        uses: ./.github/actions/composite/announceFailedWorkflowInDiscord
        with:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}


      - name: Exit failed workflow
        if: ${{ needs.typecheck.result == 'failure' || needs.lint.result == 'failure' || needs.test.result == 'failure' }}
        run: |
          echo "Checks failed, exiting ~ typecheck: ${{ needs.typecheck.result }}, lint: ${{ needs.lint.result }}, test: ${{ needs.test.result }}"
          exit 1

  chooseDeployActions:
    runs-on: ubuntu-latest
    needs: confirmPassingBuild
    outputs:
      MERGED_PR: ${{ steps.getMergedPullRequest.outputs.number }}
      SHOULD_DEPLOY: ${{ steps.shouldDeploy.outputs.SHOULD_DEPLOY }}
      IS_AUTOMATION_PR: ${{ steps.shouldDeploy.outputs.IS_AUTOMATION_PR }}

    steps:
      - uses: actions/checkout@v4

      - name: Get merged pull request
        id: getMergedPullRequest
        uses: actions-ecosystem/action-get-merged-pull-request@59afe90821bb0b555082ce8ff1e36b03f91553d9
        with:
          github_token: ${{ github.token }}

      - name: Check if StagingDeployCash is locked
        id: isStagingDeployLocked
        uses: ./.github/actions/javascript/isStagingDeployLocked
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Check if merged pull request should trigger a deploy
        id: shouldDeploy
        env:
          IS_LOCKED: ${{ steps.isStagingDeployLocked.outputs.IS_LOCKED }}
          ACTOR: ${{ github.actor }}
          HEAD_REF: ${{ steps.getMergedPullRequest.outputs.headRef }}
        run: |
          set -eo pipefail

          NORMALISED_IS_LOCKED="${IS_LOCKED:-true}"
          if [[ -z "$NORMALISED_IS_LOCKED" ]]; then
            NORMALISED_IS_LOCKED=true
          fi

          LOWER_IS_LOCKED="${NORMALISED_IS_LOCKED,,}"

          if [[ "$LOWER_IS_LOCKED" == "true" || "$LOWER_IS_LOCKED" == "null" ]]; then
            STAGING_UNLOCKED=false
          else
            STAGING_UNLOCKED=true
          fi

          if [[ "$HEAD_REF" == automation/version-bump/* ]]; then
            IS_AUTOMATION_PR=true
          else
            IS_AUTOMATION_PR=false
          fi

          if [[ "$IS_AUTOMATION_PR" == "true" ]]; then
            SHOULD_DEPLOY=false
          elif [[ "$ACTOR" == "KirokuAdmin" ]]; then
            SHOULD_DEPLOY=false
          elif [[ "$STAGING_UNLOCKED" == "true" ]]; then
            SHOULD_DEPLOY=true
          else
            SHOULD_DEPLOY=false
          fi

          echo "IS_AUTOMATION_PR=$IS_AUTOMATION_PR" >> "$GITHUB_OUTPUT"
          echo "SHOULD_DEPLOY=$SHOULD_DEPLOY" >> "$GITHUB_OUTPUT"

  skipDeploy:
    runs-on: ubuntu-latest
    needs: chooseDeployActions
    if: ${{ !fromJSON(needs.chooseDeployActions.outputs.SHOULD_DEPLOY) && github.actor != 'KirokuAdmin' && !fromJSON(needs.chooseDeployActions.outputs.IS_AUTOMATION_PR) }}
    steps:
      - name: Comment on deferred PR
        uses: actions-ecosystem/action-create-comment@cd098164398331c50e7dfdd0dfa1b564a1873fac
        with:
          github_token: ${{ secrets.KIROKU_ADMIN_TOKEN }}
          number: ${{ needs.chooseDeployActions.outputs.MERGED_PR }}
          body: |
            :hand: This PR was not deployed to staging yet because QA is ongoing. It will be automatically deployed to staging after the next production release.

  createNewVersion:
    needs: chooseDeployActions
    if: ${{ fromJSON(needs.chooseDeployActions.outputs.SHOULD_DEPLOY) }}
    uses: ./.github/workflows/createNewVersion.yml
    secrets: inherit

  updateStaging:
    needs: [chooseDeployActions, createNewVersion]
    runs-on: ubuntu-latest
    steps:
      - name: Run turnstyle
        uses: softprops/turnstyle@49108bdfa571e62371bd2c3094893c547ab3fc03
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.KIROKU_ADMIN_TOKEN }}

      - name: Setup Git for KirokuAdmin
        uses: ./.github/actions/composite/setupGitForKirokuAdmin
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Update staging branch from master
        run: |
          # Re-create the staging branch from master
          git switch -c staging

          # Force-update the remote staging branch
          git push --force origin staging

      - name: Announce failed workflow in Discord
        if: ${{ failure() }}
        uses: ./.github/actions/composite/announceFailedWorkflowInDiscord
        with:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

  # e2ePerformanceTests:
  #   needs: [chooseDeployActions]
  #   if: ${{ needs.chooseDeployActions.outputs.SHOULD_DEPLOY }}
  #   uses: ./.github/workflows/e2ePerformanceTests.yml
  #   secrets: inherit
  #   with:
  #     PR_NUMBER: ${{ needs.chooseDeployActions.outputs.MERGED_PR }}
